package com.spotify.music.features.podcast.episode.transcript.ui.page;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.recyclerview.widget.RecyclerView;
import androidx.recyclerview.widget.v;
import com.spotify.music.features.podcast.episode.transcript.ui.page.holders.AutoGeneratedDisclaimerViewHolder;
import com.spotify.music.features.podcast.episode.transcript.ui.page.holders.TextSectionViewHolder;
import kotlin.f;
import kotlin.jvm.internal.h;

public final class a extends v<c, com.spotify.music.features.podcast.episode.transcript.ui.page.holders.a> {
    public a() {
        super(b.a());
    }

    @Override // androidx.recyclerview.widget.RecyclerView.e
    public void K(RecyclerView.b0 b0Var, int i) {
        com.spotify.music.features.podcast.episode.transcript.ui.page.holders.a aVar = (com.spotify.music.features.podcast.episode.transcript.ui.page.holders.a) b0Var;
        h.e(aVar, "holderBase");
        Object Y = Y(i);
        h.d(Y, "getItem(position)");
        c cVar = (c) Y;
        h.e(cVar, "item");
        rmf<c, View, f> c = aVar.c();
        View view = aVar.a;
        h.d(view, "itemView");
        c.invoke(cVar, view);
    }

    @Override // androidx.recyclerview.widget.RecyclerView.e
    public RecyclerView.b0 M(ViewGroup viewGroup, int i) {
        h.e(viewGroup, "parent");
        LayoutInflater from = LayoutInflater.from(viewGroup.getContext());
        if (i == 0) {
            h.d(from, "layoutInflater");
            return new AutoGeneratedDisclaimerViewHolder(from, viewGroup);
        } else if (i == 1) {
            h.d(from, "layoutInflater");
            return new TextSectionViewHolder(from, viewGroup);
        } else {
            throw new IllegalArgumentException(je.p0("Unknown item view type: ", i));
        }
    }

    @Override // androidx.recyclerview.widget.RecyclerView.e
    public int w(int i) {
        return ((c) Y(i)).a().ordinal();
    }
}
