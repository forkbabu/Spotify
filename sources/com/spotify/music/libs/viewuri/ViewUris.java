package com.spotify.music.libs.viewuri;

import com.google.common.base.MoreObjects;
import com.spotify.music.libs.viewuri.c;

public final class ViewUris {
    public static final c A = new b("spotify:driving:pivot");
    public static final c.b A0 = new c.b("spotify:radio:artist:[a-zA-Z0-9]{22}");
    public static final c A1 = new b("spotify:internal:connect-device-context-menu");
    public static final c A2 = new b("spotify:superbird:setup:reconnecting");
    public static final c B = new b("spotify:driving:voice");
    public static final c.b B0 = new c.b("spotify:radio:album:[a-zA-Z0-9]{22}");
    public static final c B1 = new b("spotify:internal:gaia-onboarding-popup");
    public static final c B2 = new b("spotify:superbird:setup:testsound");
    public static final c C = new b("spotify:car-mode:home");
    public static final c.b C0 = new c.b("spotify:radio:track:+[a-zA-Z0-9]{22}");
    public static final c C1 = new b("spotify:internal:gaia-popup");
    public static final c C2 = new b("spotify:homething:settings");
    public static final c D = new b("spotify:forever-favorites");
    public static final c.b D0 = new c.b("spotify:radio:genre:[^:]+");
    public static final c D1 = new b("spotify:internal:gaia-volume");
    public static final c D2 = new b("spotify:homething:add-device");
    public static final c E = new b("spotify:waze:return");
    public static final c.b E0 = new c.b("spotify:radio:((user:[^:]+:)?(playlist:[a-zA-Z0-9]{22}))");
    public static final c E1 = new b("spotify:internal:connect-tutorial-desktop");
    public static final c E2 = new b("spotify:image-recs");
    public static final c F = new b("spotify:assisted-curation");
    public static final c.b F0 = new c.b("spotify:user:[^:]+");
    public static final c F1 = new b("spotify:internal:connect-tutorial-speaker");
    public static final c.b F2 = new c.b("spotify:topic:[a-zA-Z0-9]{22}");
    public static final c G = new b("spotify:assisted-curation:search");
    public static final c.b G0;
    public static final c G1 = new b("spotify:internal:connect-tutorial-tv");
    public static final c G2 = new b("spotify:internal:resolve:userplaylist");
    public static final c H = new b("spotify:assisted-curation:search:album");
    public static final c.b H0 = new c.b("spotify:playlist-format:[^:]+");
    public static final c H1 = new b("spotify:internal:connect-tutorial-gameconsole");
    public static final c H2 = new b("spotify:internal:settings:update-email-address");
    public static final c I = new b("spotify:assisted-curation:search:artist");
    public static final c.b I0 = new c.b("spotify:(user:[^:]+:)?(playlist:[a-zA-Z0-9]{22})");
    public static final c I1 = new b("spotify:internal:connect-tutorial-chromecast");
    public static final c I2 = new b("spotify:image-picker");
    public static final c J = new b("spotify:internal:assisted-curation:search:artists");
    public static final c.b J0 = new c.b("spotify:(user:[^:]+:)?(playlist:[a-zA-Z0-9]{22})");
    public static final c J1 = new b("spotify:internal:connect-tutorial-bluetooth");
    public static final c J2 = new b("spotify:promo-disclosure");
    public static final c K = new b("spotify:internal:assisted-curation:search:tracks");
    public static final c K0 = new b("spotify:create-playlist");
    public static final c K1 = new b("spotify:internal:preferences:content_languages");
    public static final c L = new b("spotify:internal:assisted-curation:search:albums");
    public static final c L0 = new b("spotify:rename-playlist");
    public static final c L1 = new b("spotify:push_notification_actions");
    public static final c M = new b("spotify:editprofile");
    public static final c.b M0;
    public static final c M1 = new b("spotify:internal:preferences:push_notification");
    public static final c N = new b("spotify:free-tier:collection");
    public static final c.b N0;
    public static final c N1 = new b("spotify:internal:preferences:notification_settings:channels");
    public static final c O = new b("spotify:free-tier:find");
    public static final c.b O0 = new c.b("spotify:user:[^:]+:folder:[a-fA-F0-9]{16}");
    public static final c O1 = new b("spotify:internal:preferences:notification_settings:channel_details");
    public static final c P = new b("spotify:free-tier:all-songs-dialog");
    public static final c.b P0 = new c.b("spotify:album:[a-zA-Z0-9]{22}");
    public static final c P1 = new b("spotify:internal:local_files_import");
    public static final c Q = new b("spotify:free-tier:taste-onboarding:skip-dialog");
    public static final c Q0 = new b("spotify:internal:artist");
    public static final c Q1 = new b("spotify:internal:local_files_import:folders");
    public static final c R = new b("spotify:free-tier:taste-onboarding:artist-picker");
    public static final c.b R0 = new c.b("spotify:artist:[a-zA-Z0-9]{22}(:about|:albums|:singles|:appears_on|:appears-on|:compilations|:related|:releases|:biography|:gallery|:playlists|:radio|:concert|:concerts)?");
    public static final c R1 = new b("spotify:internal:local_files_import:artists");
    public static final c S = new b("spotify:free-tier:taste-onboarding:artist-search");
    public static final c S0 = new b("spotify:internal:preferences:facebook-connect");
    public static final c S1 = new b("spotify:internal:local_files_import:albums");
    public static final c T = new b("spotify:free-tier:taste-onboarding:update-taste");
    public static final c T0 = new b("spotify:add_to_playlist");
    public static final c T1 = new b("spotify:internal:local_files_import:songs");
    public static final c.b U = new c.b("spotify:(user:[^:]+:)?(playlist:[a-zA-Z0-9]{22})");
    public static final c U0 = new b("spotify:playlist_participants");
    public static final c U1 = new b("spotify:internal:notification");
    public static final c V = new b("spotify:data-saver-mode:settings");
    public static final c V0 = new b("spotify:playlist_permissions");
    public static final c V1 = new b("spotify:internal:preferences:storage");
    public static final c W = new b("spotify:language-picker:no-skip-dialog");
    public static final c W0 = new b("spotify:playlist_web_view");
    public static final c W1 = new b("spotify:internal:preferences");
    public static final c X = new b("spotify:language-picker:picker");
    public static final c X0 = new b("spotify:disk_almost_full");
    public static final c X1 = new b("spotify:cover-image");
    public static final c Y = new b("spotify:internal:lyrics-full-screen");
    public static final c Y0 = new b("spotify:debug");
    public static final c Y1 = new b("spotify:request-permissions");
    public static final c Z = new b("spotify:capped-offline:dialog");
    public static final c Z0 = new b("spotify:quicksilver");
    public static final c Z1 = new b("spotify:app:app_rater");
    public static final c a = new b("spotify:main");
    public static final c a0 = new b("spotify:age-verification");
    public static final c a1 = new b("spotify:app:upsell");
    public static final c a2 = new b("spotify:media_service");
    public static final c b = new b("spotify:listening-history");
    public static final c b0 = new b("spotify:offline-user-mix");
    public static final c b1 = new b("spotify:upsell:premium_in_app_destination");
    public static final c b2 = new b("spotify:media-session");
    public static final c c = new b("spotify:app:radio");
    public static final c c0 = new b("spotify:config");
    public static final c c1 = new b("spotify:premium:activation");
    public static final c.b c2 = new c.b("spotify:show:[a-zA-Z0-9]{22}");
    public static final c d = new b("spotify:home");
    public static final c d0 = new b("spotify:now-playing");
    public static final c d1 = new b("spotify:ads:mobile_video_takeover");
    public static final c d2 = new b("spotify:new-episode-notifications");
    public static final c e = new b("spotify:followfeed");
    public static final c e0 = new b("spotify:now-playing-bar");
    public static final c e1 = new b("spotify:ads:screen_saver");
    public static final c e2 = new b("spotify:superbird-voice");
    public static final c f = new b("spotify:fullscreen-story");
    public static final c f0 = new b("spotify:now-playing-mini");
    public static final c f1 = new b("spotify:ads:marquee");
    public static final c f2 = new b("spotify:voice");
    public static final c g = new b("spotify:internal:running");
    public static final c g0 = new b("spotify:now-playing-view");
    public static final c g1 = new b("spotify:ads:leave_behind_companion");
    public static final c g2 = new b("spotify:voice:onboarding");
    public static final c h = new b("spotify:app:findfriends");
    public static final c h0 = new b("spotify:now-playing-view-v2");
    public static final c h1 = new b("spotify:ads:leave_behind_top_banner");
    public static final c h2 = new b("spotify:voice-results");
    public static final c i = new b("spotify:genre:podcasts-page");
    public static final c i0 = new b("spotify:queue");
    public static final c i1 = new b("spotify:internal:preferences:saved_ads");
    public static final c i2 = new b("spotify:concat");
    public static final c j = new b("spotify:podcastcharts");
    public static final c j0 = new b("spotify:app:concerts");
    public static final c j1 = new b("spotify:internal:premium_signup");
    public static final c j2 = new b("spotify:internal:service");
    public static final c k = new b("spotify:podcastcharts:regions");
    public static final c k0 = new b("spotify:app:concerts:concert-group");
    public static final c k1 = new b("spotify:app:share-flow");
    public static final c k2 = new b("spotify:internal:scannables");
    public static final c.b l = new c.b("spotify:podcastcharts:region:[^:]+");
    public static final c.b l0 = new c.b("spotify:concerts?:(songkick:events:)?[^:]+");
    public static final c l1 = new b("spotify:collection");
    public static final c l2 = new b("spotify:skip-limit-pivot");
    public static final c.b m = new c.b("spotify:podcastcharts:categories:[^:]+");
    public static final c m0 = new b("spotify:concerts:location-search");
    public static final c.b m1 = new c.b("spotify:user:[^:]+:collection");
    public static final c m2 = new b("spotify:socialsession:join-confirmation");
    public static final c.b n = new c.b("spotify:podcastcharts:chart:(trending:|top:)[^:]+");
    public static final c n0 = new b("spotify:find");
    public static final c n1 = new b("spotify:internal:collection:playlists");
    public static final c n2 = new b("spotify:socialsession:participant-list");
    public static final c.b o = new c.b("spotify:podcastcharts:chart:category:[a-zA-Z]*:.*");
    public static final c.b o0;
    public static final c o1 = new b("spotify:internal:collection:radio");
    public static final c o2 = new b("spotify:socialsession:tap-to-queue");
    public static final c p = new b("spotify:charts:root");
    public static final c p0;
    public static final c p1 = new b("spotify:internal:collection:artists");
    public static final c p2 = new b("spotify:stations-promo");
    public static final c.b q = new c.b("spotify:charts:album:[^:]+");
    public static final c.b q0 = new c.b("spotify:search(:[^:]+)(:.+)");
    public static final c q1 = new b("spotify:internal:collection:albums");
    public static final c q2 = new b("spotify:superbird:setup:welcome");
    public static final c.b r = new c.b("spotify:charts:[^:]+");
    public static final c.b r0 = new c.b("spotify:station:(artist:[a-zA-Z0-9]{22}|album:[a-zA-Z0-9]{22}|track:+[a-zA-Z0-9]{22}|genre:[^:]+|(user:[^:]+:)?(playlist:[a-zA-Z0-9]{22})|playlist:[a-zA-Z0-9]{22}|dailymix:[a-zA-Z0-9]{22})|spotify:dailymix:[a-zA-Z0-9]{22}");
    public static final c.b r1 = new c.b("spotify:user:[^:]+:collection:album:[a-zA-Z0-9]{22}");
    public static final c r2 = new b("spotify:superbird:setup:searching");
    public static final c.b s = new c.b("spotify:(app:)?chart:[^:]+");
    public static final c.b s0 = new c.b("spotify:(artist:[a-zA-Z0-9]{22}|album:[a-zA-Z0-9]{22}|track:+[a-zA-Z0-9]{22}|genre:[^:]+|(user:[^:]+:)?(playlist:[a-zA-Z0-9]{22})|playlist:[a-zA-Z0-9]{22})");
    public static final c.b s1 = new c.b("spotify:user:[^:]+:collection:artist:[a-zA-Z0-9]{22}");
    public static final c s2 = new b("spotify:superbird:setup:connected");
    public static final c.b t;
    public static final c.b t0 = new c.b("spotify:dailymix:[a-zA-Z0-9]{22}");
    public static final c t1 = new b("spotify:internal:collection:tracks");
    public static final c t2 = new b("spotify:superbird:setup:checkforupdates");
    public static final c.b u;
    public static final c u0 = new b("spotify:made-for-you");
    public static final c u1 = new b("spotify:collection:podcasts:following");
    public static final c u2 = new b("spotify:superbird:setup:connecttocar");
    public static final c.b v = new c.b("spotify:(app:)?browse");
    public static final c.b v0 = new c.b("spotify:station:artist:[a-zA-Z0-9]{22}");
    public static final c v1 = new b("spotify:collection:podcasts:episodes");
    public static final c v2 = new b("spotify:superbird:setup:connecttowifi");
    public static final c.b w = new c.b("spotify:special:[^:]+");
    public static final c.b w0 = new c.b("spotify:station:album:[a-zA-Z0-9]{22}");
    public static final c w1 = new b("spotify:collection:podcasts:downloads");
    public static final c w2 = new b("spotify:superbird:setup:downloaded");
    public static final c.b x;
    public static final c.b x0 = new c.b("spotify:station:track:+[a-zA-Z0-9]{22}");
    public static final c x1 = new b("spotify:collection:search");
    public static final c x2 = new b("spotify:superbird:setup:downloading");
    public static final c.b y = new c.b("spotify:track:+[a-zA-Z0-9]{22}");
    public static final c.b y0 = new c.b("spotify:station:genre:[^:]+");
    public static final c y1 = new b("spotify:internal:hidden-content");
    public static final c y2 = new b("spotify:superbird:setup:everythingconnected");
    public static final c z = new b("spotify:driving:jumpstart");
    public static final c.b z0 = new c.b("spotify:station:((user:[^:]+:)?(playlist:[a-zA-Z0-9]{22}))");
    public static final c z1 = new b("spotify:internal:connect-device-picker");
    public static final c z2 = new b("spotify:superbird:setup:ready");

    @Deprecated
    public enum SubView {
        NONE(""),
        CANCEL_STATE_INTERSTITIAL("cancel_state_interstitial");
        
        private final String mSubView;

        private SubView(String str) {
            this.mSubView = str;
        }

        @Override // java.lang.Enum, java.lang.Object
        public String toString() {
            return this.mSubView;
        }
    }

    static {
        new b("spotify");
        new b("spotify:navigation");
        new b("spotify:playlists");
        new b("spotify:findfriends:confirm");
        new b("spotify:app:browse");
        StringBuilder V02 = je.V0("spotify:genre:[^:]+");
        V02.append(MoreObjects.repeat("(:[^:]++)?", 4));
        t = new c.b(V02.toString());
        StringBuilder V03 = je.V0("spotify:(app:)?browse");
        V03.append(MoreObjects.repeat("(:[^:]++)?", 5));
        u = new c.b(V03.toString());
        StringBuilder V04 = je.V0("spotify:special:[^:]+");
        V04.append(MoreObjects.repeat("(:[^:]++)?", 4));
        x = new c.b(V04.toString());
        new b("spotify:car:lockscreen");
        new b("spotify:waze:optout");
        new b("spotify:waze:onboarding");
        new b("spotify:free-tier:likes");
        new b("spotify:free-tier:likes:songs");
        new b("spotify:free-tier:profile");
        new b("spotify:free-tier:data-saver:learn-more");
        new b("spotify:free-tier:data-saver:opt-in-status");
        new b("spotify:internal:nft:education:favorites-mix");
        new b("spotify:capped-ondemand:dialog");
        new b("spotify:widget");
        c.b bVar = new c.b("spotify:search(:.*)?");
        o0 = bVar;
        p0 = bVar.b("spotify:search");
        new b("spotify:daily-mix-hub");
        c.b bVar2 = new c.b("spotify:(user:[^:]+:)?(playlist:[a-zA-Z0-9]{22})");
        G0 = bVar2;
        String str = "spotify:internal:format_list_chart:(" + bVar2 + ')';
        M0 = new c.b("spotify:internal:format_list_data_saver:(" + bVar2 + ')');
        N0 = new c.b("spotify:internal:format_list_personalized_sets:(" + bVar2 + ')');
        String str2 = "spotify:internal:format_list_friends_weekly:(" + bVar2 + ')';
        new b("spotify:intro:tos:text");
        new b("spotify:add_to_playlist_bottom_sheet");
        new b("spotify:offline_sync_error");
        new b("spotify:upsell:choose_extreme_quality");
        new b("spotify:upsell:stuck_in_shuffle");
        new b("spotify:upsell:out_of_skips");
        new b("spotify:upsell:no_offline");
        new b("spotify:upsell:no_offline");
        new b("spotify:upsell:no_queue");
        new b("spotify:upsell:trial-started");
        new b("spotify:upsell:trial-ended");
        new b("spotify:upsell:capping_reached");
        new b("spotify:upsell:content-unavailable");
        new b("spotify:ads:sponsored_session");
        new b("spotify:dynamic_upsell");
        new b("spotify:share");
        new b("spotify:app:share:facebook-stories");
        new b("spotify:app:share:instagram-stories");
        new b("spotify:app:share:snapchat-stories");
        new b("spotify:share:missing-user");
        new b("spotify:licenses");
        new b("spotify:update");
        new b("spotify:internal:collection:offlined-music");
        new b("spotify:internal:gaia-popup-account-linking");
        new b("spotify:internal:gaia-popup-dynamic-suggestion");
        new b("spotify:config:account");
        new b("spotify:internal:tutorials");
        new b("spotify:churn_locked_state");
        new b("spotify:fullscreen_videoplayer");
        new b("spotify:categoryonboarding:category-picker");
        new b("spotify:categoryonboarding:send-categories");
    }
}
